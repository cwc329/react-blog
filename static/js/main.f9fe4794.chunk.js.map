{"version":3,"sources":["context.js","components/Navbar.js","utils.js","WebAPI.js","components/Pagination.js","components/PostsList.js","components/SinglePost.js","pages/Posts.js","useInput.js","components/Input.js","pages/Register.js","pages/Login.js","pages/Home.js","pages/AddPost.js","useAuthorization.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","createContext","Nav","styled","nav","NavList","ul","NavListItem","li","StyledLink","Link","StyledGreeting","span","Navbar","history","useHistory","useContext","user","setUser","to","data","nickname","onClick","window","localStorage","removeItem","length","push","timeStampConvert","stamp","date","Date","toLocaleDateString","toLocaleTimeString","apiEndpoint","getPosts","a","querystring","id","querystrings","requestUrl","slice","fetch","response","addPost","token","options","method","headers","body","JSON","stringify","json","result","login","username","password","getUserData","register","StyledPagination","div","StyledPageIndicator","PaginationLink","Pagination","currentPage","totalPages","pages","i","filter","page","map","StyledPostsList","StyledPostCard","PostTitleLink","PostsList","useState","posts","setPosts","setTotalpages","useEffect","sort","order","limit","then","res","Math","ceil","Number","get","post","title","createdAt","SinglePost","setPost","useParams","Posts","path","useRouteMatch","query","URLSearchParams","useLocation","search","exact","useInput","inputs","setInputs","errorMessage","setErrorMessage","handleValidationCheck","useCallback","name","invalidMessage","input","attributes","handleChange","newValue","value","StyledInputSection","StyledInput","StyledTextarea","textarea","Input","handleValueChange","e","target","handleValidation","validationMessage","htmlFor","type","onChange","onBlur","onInvalid","StyledForm","form","Register","required","handleRegister","preventDefault","filters","registerInformation","forEach","ok","message","setItem","alert","onSubmit","Login","handleLogin","loginInformation","Home","AddPost","useAuthorization","handleAddPost","getItem","AppWrapper","App","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9fe4794.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const UserContext = createContext(null);","import { useContext } from 'react';\nimport styled from 'styled-components';\nimport { Link, useHistory } from 'react-router-dom'\nimport { UserContext } from '../context';\n\nconst Nav = styled.nav`\n  display: flex;\n  justify-content: space-between;\n  margin: 15px;\n`\n\nconst NavList = styled.ul`\n  display: flex;\n`\n\nconst NavListItem = styled.li`\n  list-style-type: none;\n\n  & ~ & {\n    margin-left: 10px;\n  }\n`\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n\n  &:hover {\n    color: white;\n    background: black;\n  }\n`\n\nconst StyledGreeting = styled.span`\n  font-weight: bold;\n`\n\nexport default function Navbar() {\n  const history = useHistory();\n  \n  const handleLogOut = () => {\n    window.localStorage.removeItem('token');\n    setUser(null);\n    if (history[history.length - 1] !== '/') {\n      history.push('/');\n    }\n  }\n\n  const {user, setUser} = useContext(UserContext);\n\n  return (\n    <Nav>\n      <h1>\n        <StyledLink to=\"/\">\n          My blog\n        </StyledLink>\n      </h1>\n      <NavList>\n        <NavListItem>\n          <StyledGreeting> {user ? `Hi~ ${user.data.nickname}` : ''}</StyledGreeting>\n        </NavListItem>\n        <NavListItem>\n          <StyledLink to=\"/posts\">\n            文章列表\n          </StyledLink>\n        </NavListItem>\n        \n        { user && <NavListItem>\n          <StyledLink to=\"/addpost\">\n            新增文章\n          </StyledLink>\n        </NavListItem>}\n        { user && <NavListItem>\n          <StyledLink to=\"/\" onClick={handleLogOut}>\n            登出\n          </StyledLink>\n        </NavListItem>}\n        {!user && <NavListItem>\n          <StyledLink to=\"/login\">\n            登入\n          </StyledLink>\n        </NavListItem>}\n        {!user && <NavListItem>\n          <StyledLink to=\"/register\">\n            註冊\n          </StyledLink>\n        </NavListItem>}\n      </NavList>\n    </Nav>\n  )\n}","import { useLocation } from 'react-router-dom';\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nfunction timeStampConvert(stamp) {\n  const date = new Date(stamp);\n  return date.toLocaleDateString('ch-TW') + ' ' + date.toLocaleTimeString('ch-TW')\n}\n\nexport {useQuery, timeStampConvert}","const apiEndpoint = 'https://student-json-api.lidemy.me';\n\nasync function getPosts({ id, querystrings }) {\n  let requestUrl = `${apiEndpoint}/posts`;\n  if (id) {\n    requestUrl += `/${id}`;\n  };\n  requestUrl += '?';\n  for (const querystring in querystrings) {\n    requestUrl += `_${querystring}=${querystrings[querystring]}&`\n  }\n  requestUrl = requestUrl.slice(0, requestUrl.length - 1);\n  const response = await fetch(requestUrl)\n  return response;\n}\n\nasync function addPost({token, data}) {\n  const requestUrl = `${apiEndpoint}/posts`;\n  const options = {\n    method: 'POST',\n    headers: {\n      'authorization': `Bearer ${token}`,\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify(data),\n  }\n  const response = await fetch(requestUrl, options);\n  const result = await response.json();\n  return result;\n}\n\nasync function login({ username, password }) {\n  const requestUrl = `${apiEndpoint}/login`;\n  const options = {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  }\n  const response = await fetch(requestUrl, options);\n  const result = await response.json();\n  return result;\n}\n\nasync function getUserData({ token }) {\n  if (!token) {\n    return {};\n  };\n  const requestUrl = `${apiEndpoint}/me`;\n  const headers = {\n    'authorization': `Bearer ${token}`\n  };\n  const response = await fetch(requestUrl, { headers });\n  const data = await response.json();\n  return data;\n}\n\nasync function register({ username, password, nickname }) {\n  const requestUrl = `${apiEndpoint}/register`;\n  const options = {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      password,\n      nickname\n    })\n  };\n  const response = await fetch(requestUrl, options);\n  const result = await response.json();\n  return result;\n}\n\nexport {\n  getPosts,\n  addPost,\n  login,\n  getUserData,\n  register\n}","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst StyledPagination = styled.div`\n  margin: 10px auto;\n  width: 450px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n\nconst StyledPageIndicator = styled.div`\n  margin: 0 auto;\n  text-align: center;\n`\n\nconst PaginationLink = styled(Link)`\n  display: inline-block;\n  text-decoration: none;\n  color: blue;\n  min-width: 15px;\n  text-align: center;\n  & ~ & {\n    margin-left: 5px;\n  }\n  &:hover {\n    background: #1111ff;\n    color: white;\n  }\n`\n\nexport default function Pagination({ currentPage, totalPages }) {\n  let pages = [];\n  for (let i = currentPage - 2; i <= currentPage + 2; i++) {\n    pages.push(i);\n  }\n  return (\n    <StyledPagination>\n      {currentPage && totalPages && <StyledPageIndicator>{`${currentPage} / ${totalPages} page`}</StyledPageIndicator>}\n      <div>\n        {currentPage > 1 ? <PaginationLink to={`/posts?page=${currentPage - 1}`} ><button>上一頁</button></PaginationLink> : ''}\n        {pages\n          .filter(page => {\n            return page > 0 && page <= totalPages;\n          })\n          .map(page => {\n            return (\n              <PaginationLink key={page} to={`/posts?page=${page}`}>{page}</PaginationLink>\n            )\n          })\n        }\n        {currentPage < totalPages ? <PaginationLink to={`/posts?page=${currentPage + 1}`} ><button>下一頁</button></PaginationLink> : ''}\n      </div>\n    </StyledPagination>\n  )\n}","import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { getPosts } from '../WebAPI';\nimport { timeStampConvert } from '../utils';\nimport Pagination from '../components/Pagination';\n\nconst StyledPostsList = styled.div`\n  width: 900px;\n  margin: 0 auto;\n`\n\nconst StyledPostCard = styled.div`\n  border: 1.5px solid black;\n  border-radius: 4px;\n  padding: 0 10px;\n\n  & ~ & {\n    margin-top: 5px;\n  }\n`\n\nconst PostTitleLink = styled(Link)`\n  text-decoration: none;\n  color: blue;\n`\n\nexport default function PostsList({ page }) {\n  const [posts, setPosts] = useState([]);\n  const [totalPages, setTotalpages] = useState();\n  \n  useEffect(() => {\n    const querystrings = {\n      page,\n      sort: 'createdAt',\n      order: 'desc',\n      limit: 5\n    }\n    getPosts({ querystrings })\n      .then(res => {\n        setTotalpages(Math.ceil(Number(res.headers.get('X-Total-Count')) / 5));\n        return res.json()\n      })\n      .then(json => {\n        setPosts(json);\n      })\n  }, [page]);\n\n  return (\n    <StyledPostsList>\n      {posts.map(post => {\n        return (\n          <StyledPostCard key={post.id}>\n            <h1><PostTitleLink to={`posts/${post.id}`}>{post.title}</PostTitleLink></h1>\n            <h4>{timeStampConvert(post.createdAt)}</h4>\n          </StyledPostCard>\n        )\n      })}\n      <Pagination currentPage={page} totalPages={totalPages} />\n    </StyledPostsList>\n  )\n}","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { getPosts } from '../WebAPI';\nimport { timeStampConvert } from '../utils';\n\nconst StyledPostCard = styled.div`\n  width: 900px;\n  margin: 0 auto;\n  border: 1.5px solid black;\n  border-radius: 4px;\n  padding: 0 10px;\n`\nexport default function SinglePost() {\n  const [post, setPost] = useState({});\n  const { id } = useParams();\n  useEffect(() => {\n    getPosts({ id })\n      .then(response => response.json())\n      .then(data => { setPost(data) });\n  }, [])\n  return (\n    <StyledPostCard>\n      <h1>{post.title}</h1>\n      <h4>{post.createdAt && timeStampConvert(post.createdAt)}</h4>\n      <p>{post.body}</p>\n    </StyledPostCard>\n  )\n}","import {\n  Switch,\n  Route,\n  useRouteMatch,\n} from 'react-router-dom'\nimport { useQuery } from '../utils';\nimport PostsList from '../components/PostsList';\nimport SinglePost from '../components/SinglePost'\n\nexport default function Posts() {\n  const { path } = useRouteMatch();\n  const query = useQuery();\n  \n  return (\n    <Switch>\n      <Route exact path={path}>\n        <PostsList page={Number(query.get('page')) || 1} />\n      </Route>\n      <Route path={`${path}/:id`}>\n        <SinglePost />\n      </Route>\n    </Switch>\n  )\n}\n","import { useState, useCallback } from 'react';\n\nexport default function useInput() {\n  const [inputs, setInputs] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleValidationCheck = useCallback((name, invalidMessage) => {\n    setInputs(inputs.map(input => {\n      const statesName = input.attributes.name;\n      return statesName !== name\n        ? input\n        : {...input, errorMessage: invalidMessage}\n    }))\n  }, [setInputs, inputs])\n\n  const handleChange = useCallback((name, newValue) => {\n    setInputs(inputs.map(input => {\n      return (name !== input.attributes.name)\n        ? input\n        : {...input, attributes: {...input.attributes, value: newValue}}\n    }))\n  }, [setInputs, inputs])\n\n  return {\n    errorMessage,\n    setErrorMessage,\n    inputs,\n    setInputs,\n    handleChange,\n    handleValidationCheck\n  }\n}","import styled from 'styled-components';\n\nconst StyledInputSection = styled.div`\n  width: 100%;\n  & ~ & {\n    margin-top: 10px;\n  }\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  height: 2rem;\n  font-size: 1.5rem;\n`\n\nconst StyledTextarea = styled.textarea`\n  width: 100%;\n  height: 300px;\n`\n\nexport default function Input({ input, handleChange, handleValidationCheck }) {\n  const { attributes } = input;\n  \n  const handleValueChange = (e) => {\n    handleChange(input.attributes.name, e.target.value)\n  }\n\n  const handleValidation = (e) => {\n    handleValidationCheck(input.attributes.name, e.target.validationMessage)\n  }\n\n  return (\n    <StyledInputSection>\n      <label htmlFor={attributes.name}>\n        {input.title ? <h3>{input.title}</h3> : ''}\n      </label>\n      <div>\n        {input.attributes.type !== 'textarea'\n          ? <StyledInput\n            {...attributes}\n            onChange={handleValueChange}\n            onBlur={handleValidation}\n            onInvalid={handleValidation} />\n          : <StyledTextarea\n            {...attributes}\n            onChange={handleValueChange}\n            onBlur={handleValidation}\n            onInvalid={handleValidation}>\n            </StyledTextarea>\n          }\n      </div>\n    </StyledInputSection>\n  )\n  \n}","import { useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { getUserData, register } from '../WebAPI';\nimport { UserContext } from '../context';\nimport useInput from '../useInput';\nimport Input from '../components/Input';\n\nconst StyledForm = styled.form`\n  margin: 0 auto;\n  width: 200px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n\nexport default function Register() {\n  \n  const {\n    errorMessage,\n    setErrorMessage,\n    inputs,\n    setInputs,\n    handleChange,\n    handleValidationCheck\n  } = useInput();\n  const history = useHistory();\n  const { user, setUser } = useContext(UserContext);\n\n  useEffect(() => {\n    const formInputs = [\n      {\n        attributes: {\n          type: 'text',\n          name: 'username',\n          value: '',\n          required: true\n        },\n        title: '帳號'\n      },\n      {\n        attributes: {\n          type: 'text',\n          name: 'nickname',\n          value: '',\n          required: true\n        },\n        title: '暱稱'\n      },\n      {\n        attributes:\n        {\n          type: 'password',\n          name: 'password',\n          value: '',\n          required: true\n        },\n        title: '密碼'\n      },\n      {\n        attributes:\n        {\n          type: 'submit',\n          name: 'submit',\n          value: '註冊'\n        },\n        title: ''\n      },\n    ]\n    setInputs(formInputs);\n  }, [setInputs]);\n\n  useEffect(() => {\n    if (user) {\n      history.push('/');\n    }\n  }, []);\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n    const filters = ['username', 'password', 'nickname'];\n    const registerInformation = {};\n    inputs.forEach(input => {\n      for (const filter of filters) {\n        if (filter === input.attributes.name) {\n          registerInformation[filter] = input.attributes.value\n        }\n      }\n    })\n    try {\n      const response = await register(registerInformation);\n      const { ok, token } = response;\n      if (ok !== 1) {\n        setErrorMessage(response.message);\n        return;\n      }\n      window.localStorage.setItem('token', response.token);\n      getUserData({ token })\n        .then(data => {\n          setUser(data);\n        })\n      history.push('/');\n    } catch (error) {\n      alert(error);\n    }\n  }\n\n  return (\n    <div>\n      <StyledForm onSubmit={handleRegister}>\n        {inputs.map(input => {\n          return (\n            <Input key={input.attributes.name} input={input} handleChange={handleChange} handleValidationCheck={handleValidationCheck} />\n          )\n        })}\n      </StyledForm>\n      <div><p>{errorMessage}</p></div>\n    </div>\n  )\n}","import { useEffect, useContext } from 'react';\nimport { login, getUserData } from '../WebAPI';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport useInput from '../useInput';\nimport Input from '../components/Input';\nimport { UserContext } from '../context';\n\nconst StyledForm = styled.form`\n  margin: 0 auto;\n  width: 200px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n\nexport default function Login() {\n  \n  const {\n    errorMessage,\n    setErrorMessage,\n    inputs,\n    setInputs,\n    handleChange,\n    handleValidationCheck\n  } = useInput();\n  const history = useHistory();\n  const { user, setUser } = useContext(UserContext);\n\n  useEffect(() => {\n    const formInputs = [\n      {\n        attributes: {\n          type: 'text',\n          name: 'username',\n          value: '',\n          required: true\n        },\n        title: '帳號'\n      },\n      {\n        attributes:\n        {\n          type: 'password',\n          name: 'password',\n          value: '',\n          required: true\n        },\n        title: '密碼'\n      },\n      {\n        attributes:\n        {\n          type: 'submit',\n          name: 'submit',\n          value: '登入'\n        },\n        title: ''\n      },\n    ]\n    setInputs(formInputs);\n  }, [setInputs]);\n\n  useEffect(() => {\n    if (user) {\n      history.push('/');\n    }\n  }, []);\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    const filters = ['username', 'password'];\n    const loginInformation = {};\n    inputs.forEach(input => {\n      for (const filter of filters) {\n        if (filter === input.attributes.name) {\n          loginInformation[filter] = input.attributes.value\n        }\n      }\n    })\n    try {\n      const response = await login(loginInformation);\n      const { ok, message, token } = response;\n      if (ok !== 1) {\n        setErrorMessage(message);\n        return;\n      }\n      window.localStorage.removeItem('token');\n      window.localStorage.setItem('token', token);\n      getUserData({ token })\n        .then(data => {\n          setUser(data);\n        });\n      history.push('/');\n    } catch (error) {\n      alert(error);\n    }\n  }\n\n  return (\n    <div>\n      <StyledForm onSubmit={handleLogin}>\n        {inputs.map(input => {\n          return (\n            <Input key={input.attributes.name} input={input} handleChange={handleChange} handleValidationCheck={handleValidationCheck} />\n          )\n        })}\n      </StyledForm>\n      <div><p>{errorMessage}</p></div>\n    </div>\n  )\n}","import PostsList from '../components/PostsList';\n\nexport default function Home() {\n  return (\n    <PostsList />\n  )\n}","import { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { addPost } from '../WebAPI';\nimport useInput from '../useInput';\nimport useAuthorization from '../useAuthorization';\nimport Input from '../components/Input';\n\nconst StyledForm = styled.form`\n  margin: 0 auto;\n  width: 900px;\n`\n\nconst StyledInput = styled(Input)`\n  width: 900px;\n`\n\nexport default function AddPost() {\n  const { history } = useAuthorization();\n  const {\n    errorMessage,\n    inputs,\n    setInputs,\n    handleChange,\n    handleValidationCheck\n  } = useInput();\n\n  useEffect(() => {\n    const formInputs = [\n      {\n        attributes: {\n          type: 'text',\n          name: 'title',\n          value: '',\n          required: true\n        },\n        title: '標題'\n      },\n      {\n        attributes: {\n          type: 'textarea',\n          name: 'body',\n          value: '',\n          required: true\n        },\n        title: '內文'\n      },\n      {\n        attributes:\n        {\n          type: 'submit',\n          name: 'submit',\n          value: '發布'\n        },\n        title: ''\n      },\n    ];\n    setInputs(formInputs)\n  }, [setInputs]);\n\n  const handleAddPost = async (e) => {\n    e.preventDefault();\n    const token = window.localStorage.getItem('token');\n    const filters = ['title', 'body'];\n    const data = {}\n    inputs.forEach(input => {\n      const { name, value } = input.attributes;\n      for (const filter of filters) {\n        if (filter === name) {\n          data[filter] = value;\n        }\n      }\n    })\n    await addPost({ token, data });\n    history.push('/');\n  }\n\n  return (\n    <div>\n      <StyledForm onSubmit={handleAddPost}>\n        {inputs.map(input => {\n          return (\n            <StyledInput\n              key={input.attributes.name}\n              input={input}\n              handleChange={handleChange}\n              handleValidationCheck={handleValidationCheck}\n            />\n          )\n        })}\n      </StyledForm>\n      <div><p>{errorMessage}</p></div>\n    </div>\n  )\n}","import { useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { UserContext } from './context';\n\n\nexport default function useAuthorization() {\n  const history = useHistory()\n  const { user, setUser } = useContext(UserContext);\n  \n  useEffect(() => {\n    if (!user) {\n      history.push('/');\n    }\n  }, []);\n\n  return {\n    user,\n    setUser,\n    history\n  }\n}","import { useState, useEffect } from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport styled from 'styled-components'\nimport './App.css';\nimport Navbar from './components/Navbar'\nimport Posts from './pages/Posts';\nimport Register from './pages/Register';\nimport Login from './pages/Login';\nimport Home from './pages/Home';\nimport AddPost from './pages/AddPost';\nimport { getUserData } from './WebAPI';\nimport { UserContext } from './context';\n\nconst AppWrapper = styled.div`\n  max-width: 1920px;\n  margin: 0 auto;\n\n\n`\n\nfunction App() {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const token = window.localStorage.getItem('token');\n    getUserData({ token })\n      .then(data => {\n        if (data.ok !== 1) {\n          window.localStorage.setItem('token', '');\n          setUser(null);\n        } else {\n          if (user && data.data.id === user.data.id) {\n            return;\n          }\n          setUser(data);\n        }\n      })\n  }, [user])\n\n  return (\n    <AppWrapper>\n      <UserContext.Provider value={{ user, setUser }}>\n        <Router>\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n            <Route path=\"/posts\">\n              <Posts />\n            </Route>\n            <Route path=\"/register\">\n              <Register />\n            </Route>\n            <Route path=\"/addPost\">\n              <AddPost />\n            </Route>\n          </Switch>\n        </Router>\n      </UserContext.Provider>\n    </AppWrapper>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}